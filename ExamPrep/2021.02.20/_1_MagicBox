import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class _1_MagicBox {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        // Queue
        Integer[] getBox1 = Arrays.stream(scan.nextLine().split(" "))
                .map(n -> Integer.parseInt(n))
                .toArray(Integer[]::new);
        ArrayDeque<Integer> box1 = new ArrayDeque<>();
        Collections.addAll(box1, getBox1);

        //Stack
        Integer[] getBox2 = Arrays.stream(scan.nextLine().split(" "))
                .map(n -> Integer.parseInt(n))
                .toArray(Integer[]::new);
        ArrayDeque<Integer> box2 = new ArrayDeque<>();
        Arrays.stream(getBox2).forEach(n -> box2.push(n));

        int claimedItems = 0;

        while (!box1.isEmpty() && !box2.isEmpty()) {
            int currBox1 = box1.remove();
            int currBox2 = box2.pop();

            int sum = currBox1 + currBox2;

            if (sum % 2 == 0) {
                claimedItems += sum;
            } else {
                box1.push(currBox1);
                box1.add(currBox2);
            }
        }

        if (box1.isEmpty()) {
            System.out.println("First magic box is empty.");
        } else {
            System.out.println("Second magic box is empty.");
        }

        if (claimedItems >= 90) {
            System.out.printf("Wow, your prey was epic! Value: %d", claimedItems);
        } else {
            System.out.printf("Poor prey... Value: %d", claimedItems);
        }
    }
}
